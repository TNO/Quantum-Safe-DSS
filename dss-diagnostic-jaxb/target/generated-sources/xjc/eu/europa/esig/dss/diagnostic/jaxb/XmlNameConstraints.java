//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.02 at 04:21:50 PM CEST 
//


package eu.europa.esig.dss.diagnostic.jaxb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NameConstraints complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NameConstraints"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://dss.esig.europa.eu/validation/diagnostic}CertificateExtension"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="PermittedSubtree" type="{http://dss.esig.europa.eu/validation/diagnostic}GeneralSubtree" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="ExcludedSubtree" type="{http://dss.esig.europa.eu/validation/diagnostic}GeneralSubtree" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NameConstraints", propOrder = {
    "permittedSubtrees",
    "excludedSubtrees"
})
public class XmlNameConstraints
    extends XmlCertificateExtension
    implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "PermittedSubtree")
    protected List<XmlGeneralSubtree> permittedSubtrees;
    @XmlElement(name = "ExcludedSubtree")
    protected List<XmlGeneralSubtree> excludedSubtrees;

    /**
     * Gets the value of the permittedSubtrees property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permittedSubtrees property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermittedSubtrees().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XmlGeneralSubtree }
     * 
     * 
     */
    public List<XmlGeneralSubtree> getPermittedSubtrees() {
        if (permittedSubtrees == null) {
            permittedSubtrees = new ArrayList<XmlGeneralSubtree>();
        }
        return this.permittedSubtrees;
    }

    /**
     * Gets the value of the excludedSubtrees property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the excludedSubtrees property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExcludedSubtrees().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XmlGeneralSubtree }
     * 
     * 
     */
    public List<XmlGeneralSubtree> getExcludedSubtrees() {
        if (excludedSubtrees == null) {
            excludedSubtrees = new ArrayList<XmlGeneralSubtree>();
        }
        return this.excludedSubtrees;
    }

}
