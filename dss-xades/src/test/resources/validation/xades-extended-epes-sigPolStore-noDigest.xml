<?xml version="1.0" encoding="UTF-8" standalone="no"?><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#" Id="id-181bedbc8ee9d6976024ffb3e937ca96"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/><ds:Reference Id="r-id-181bedbc8ee9d6976024ffb3e937ca96-1" Type="http://www.w3.org/2000/09/xmldsig#Object" URI="#o-id-181bedbc8ee9d6976024ffb3e937ca96-1"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#base64"/></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><ds:DigestValue>kcDHOZjwZhVfuDhuhCeCERRmYpTH4Jj4RmfVVi31Q9g=</ds:DigestValue></ds:Reference><ds:Reference Type="http://uri.etsi.org/01903#SignedProperties" URI="#xades-id-181bedbc8ee9d6976024ffb3e937ca96"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><ds:DigestValue>Gl65a53Eh+wnupLSofqb36J8UcLjMp1HrHybvsqvq9g=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue Id="value-id-181bedbc8ee9d6976024ffb3e937ca96">PgLEJZrw/xDf4QFAvPTK61U0yi+4uW13wb9T92oaIkK6HdP1WkW0INYganF/NlAX9Wkk0Ka5u3SNm2i+ol8APGKBRcSW6uan3dsZrojg8TKMMJOFJgTGrySlnFedvAckz+GSd/cJxUMdjxAr+44yyaBM5N/xg9HjwK2xOSNVCb2hDYhfiLP6T1j7r8kW+FL5WhyrudrKH8syYYIsjZi2jf+tYmQNCWU+mOut0CyGa4d46vZI3r1OkF1D6CSu/Z71meiCLZIUXgSVhhJ+Hp19rLks6nZBMg+n3SubatwQKOo89pkJPlecsR4Z0zjitHZrHb9Ik8uIZhAsBYlWVXlrBQ==</ds:SignatureValue><ds:KeyInfo><ds:X509Data><ds:X509Certificate>MIID1DCCArygAwIBAgIBCjANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjEwMTAzMTEzMTEyWhcNMjIxMTAzMTEzMTEyWjBPMRIwEAYDVQQDDAlnb29kLXVzZXIxGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMDmL2YuwnwQsaXuhuMQw1zvS7xWYAfExV62mk40h2U5OLW2i0xLsYCCzZGHZ9oBxtN8XoB+g2A97xEq7FNUdHfS1cOH7vQPJgVHl8RPjJ4f3ZEOdAFGy+i/tAH3LaLgihyC0d2Z7ddtS2OAxdsF6OAl8pXwkiUGlSYkk3G6yMN4aMNMJB22qvwTk0PN/tLuTSBQojMGAERMSinQQ5Zl3/Bv1IGG+NVtOuRxq9cewZCapMG5darYZJcENqHHdvYuyy/cxrH9j6UUkYFTFMto5xV+PpnUC0c+wkywS3II3o3jxLFOC7jFWEWRVNtxccxRaGbCYhtrh7HmLmd9OGKY12sCAwEAAaOBvDCBuTAOBgNVHQ8BAf8EBAMCBkAwgYcGCCsGAQUFBwEBBHsweTA5BggrBgEFBQcwAYYtaHR0cDovL2Rzcy5ub3dpbmEubHUvcGtpLWZhY3Rvcnkvb2NzcC9nb29kLWNhMDwGCCsGAQUFBzAChjBodHRwOi8vZHNzLm5vd2luYS5sdS9wa2ktZmFjdG9yeS9jcnQvZ29vZC1jYS5jcnQwHQYDVR0OBBYEFH2OMJMJVKDqpEtyzU4gZzEjJUdXMA0GCSqGSIb3DQEBCwUAA4IBAQAk30zA94p9QWVxMpMKLQQ5vxyXFS39Ukm5bKK99IoR5rpxQU4VSGlHLMCAxjn+jNC5cJy+uBnPgpwLXvQ+KR+2tSpb1AiON9CFT7kLyRnRr9Zm/tbDVSL9e1+bd3FJlm+N+gUjuCnj+/Xl4DAwaOUxSr38PgU4qRAJHBNaof3otCG+RV//5SjV/1ftACyuY2YK5ZPyeBJP+T1hx5lnZw+vBIy6V7bJb5nTbxHsADry48uKUyXWweklvkMBMck51qUFhVqCi8bGezlzFZd6oMZf324O741nwbP+Yg4lJnY6hd0tz8kieFX7oS55Sie5AN3527xQCcJC6RA8WnFHlTjn</ds:X509Certificate><ds:X509Certificate>MIID6jCCAtKgAwIBAgIBBDANBgkqhkiG9w0BAQsFADBNMRAwDgYDVQQDDAdyb290LWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwHhcNMjEwMTAzMTEzMTEyWhcNMjIxMTAzMTEzMTEyWjBNMRAwDgYDVQQDDAdnb29kLWNhMRkwFwYDVQQKDBBOb3dpbmEgU29sdXRpb25zMREwDwYDVQQLDAhQS0ktVEVTVDELMAkGA1UEBhMCTFUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCDUbfHkxCmDU+XdRXr1PsCH7d+ltf+PX3Gy/Onu7iyM85lBK/YkYaDWYKDwOoRyiiLXvvHWLnAzG34SaBW+K2N2oYssn+yR7zlJWe4UrSlSLpgC/E7cqRa0hJJvza78Z1u7CZt+ITtiqFmaqGh/r077fUfrefPzhj1zcT4Em8MJtvUiW7jyFRfHn+tMHZ4a+cvR/Eyrm52sHgxzB7XXislrHDBqZZ7Yygc5jZ29j8fK2d5iU/Wb85junvUfYtlbx5n3nZfHgMMPC9J/RiB8mnCm4M3tLi3MisOuLgQvHWYWFYmvnTZ88t+tFM5Hgz8VmTAfxo1bHUQPLewl1BTC2dAgMBAAGjgdQwgdEwDgYDVR0PAQH/BAQDAgEGMEEGA1UdHwQ6MDgwNqA0oDKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NybC9yb290LWNhLmNybDBMBggrBgEFBQcBAQRAMD4wPAYIKwYBBQUHMAKGMGh0dHA6Ly9kc3Mubm93aW5hLmx1L3BraS1mYWN0b3J5L2NydC9yb290LWNhLmNydDAdBgNVHQ4EFgQUKW4LgPzZ6O9lLLomUN2hvexQMdcwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAVFUrCRS8pDA/glc1et8Y7eqGfhBsMHlmvvcUbkem4Dye0Yht3VR6TiF9X85un/NcVUXN3SzFJ9W2Kva8L0hzhGdFg9jkkzMvZDxQj6Mfvos52QlzsZ/Uf8nUlr3saCPASITsgw2+YgxGPKUugQxELXYxUYrBoUVjhBsjoas7t/COSkGCC18MFr+xisgatuOMYFmg2xWnwsWUDr1XXTSBMxany0VdAtheXzhmLAet7TfrrbnXbGKtkcV7a6BD0gvgXM4QHgRnfjYWBYAh5zxIpByPi30MSw1dzMXWX0Rc8pGD3ukU/3/c4NL/IZVCEm35RYzznIvwEe1mYX5sOatunw==</ds:X509Certificate></ds:X509Data></ds:KeyInfo><ds:Object><xades:QualifyingProperties xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" Target="#id-181bedbc8ee9d6976024ffb3e937ca96"><xades:SignedProperties Id="xades-id-181bedbc8ee9d6976024ffb3e937ca96"><xades:SignedSignatureProperties><xades:SigningCertificateV2><xades:Cert><xades:CertDigest><ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><ds:DigestValue>8ReDD5rE+RsUxULzEL8iGnTxKcnBdmk9DJ+ABvjgAGfo36jwQ7X0bl/ylm7E+dtXdmQ7caPNx9cJfH7tzQn7wQ==</ds:DigestValue></xades:CertDigest><xades:IssuerSerialV2>MFYwUaRPME0xEDAOBgNVBAMMB2dvb2QtY2ExGTAXBgNVBAoMEE5vd2luYSBTb2x1dGlvbnMxETAPBgNVBAsMCFBLSS1URVNUMQswCQYDVQQGEwJMVQIBCg==</xades:IssuerSerialV2></xades:Cert></xades:SigningCertificateV2><xades:SignaturePolicyIdentifier><xades:SignaturePolicyId><xades:SigPolicyId><xades:Identifier>urn:sbr:signature-policy:xml:2.0</xades:Identifier></xades:SigPolicyId></xades:SignaturePolicyId></xades:SignaturePolicyIdentifier></xades:SignedSignatureProperties><xades:SignedDataObjectProperties><xades:DataObjectFormat ObjectReference="#r-id-181bedbc8ee9d6976024ffb3e937ca96-1"><xades:MimeType>text/xml</xades:MimeType></xades:DataObjectFormat></xades:SignedDataObjectProperties></xades:SignedProperties><xades:UnsignedProperties><xades:UnsignedSignatureProperties><xades141:SignaturePolicyStore Id="sps-id-181bedbc8ee9d6976024ffb3e937ca96" xmlns:xades141="http://uri.etsi.org/01903/v1.4.1#"><xades141:SPDocSpecification><xades:Identifier>urn:sbr:signature-policy:xml:2.0</xades:Identifier><xades:Description>Test description</xades:Description></xades141:SPDocSpecification><xades141:SignaturePolicyDocument></xades141:SignaturePolicyDocument></xades141:SignaturePolicyStore></xades:UnsignedSignatureProperties></xades:UnsignedProperties></xades:QualifyingProperties></ds:Object><ds:Object Id="o-id-181bedbc8ee9d6976024ffb3e937ca96-1">77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxoOnRhYmxlIHhtbG5zOmg9Imh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0LyI+DQoJPGg6dHI+DQoJCTxoOnRkPkhlbGxvPC9oOnRkPg0KCQk8aDp0ZD5Xb3JsZDwvaDp0ZD4NCgk8L2g6dHI+DQo8L2g6dGFibGU+</ds:Object></ds:Signature>